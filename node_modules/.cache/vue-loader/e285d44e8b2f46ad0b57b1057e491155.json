{"remainingRequest":"/var/www/minibank/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/minibank/src/views/settings/prescriptionHeaderSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/minibank/src/views/settings/prescriptionHeaderSettings.vue","mtime":1570628808976},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UploadButton from \"vuetify-upload-button\";\n\nexport default {\n  components: {\n    \"upload-btn\": UploadButton\n  },\n  data: () => ({\n    prescriptionType: \"\",\n    headerItem: {\n      doctorName: \"\",\n      degree: \"\",\n      chamberName: \"\",\n      telephone: \"\",\n      cellphone: \"\",\n      address: \"\",\n      image: \"\",\n      prescriptionType: \"\"\n    },\n    withoutHeaderItem: {\n      headerSpace: \"\",\n      footerSpace: \"\"\n    },\n    imageUrl: \"\",\n    image: null\n  }),\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.$store.dispatch(\"getPrintHeaderDetails\").then(response => {\n        this.headerItem.doctorName = response.data.data.withHeader.doctor_name;\n        this.headerItem.degree = response.data.data.withHeader.degree;\n        this.headerItem.chamberName =\n          response.data.data.withHeader.chamber_name;\n        this.headerItem.telephone = response.data.data.withHeader.phone;\n        this.headerItem.cellphone = response.data.data.withHeader.mobile;\n        this.headerItem.address = response.data.data.withHeader.address;\n        this.withoutHeaderItem.headerSpace =\n          response.data.data.withoutHeader.header;\n        this.withoutHeaderItem.footerSpace =\n          response.data.data.withoutHeader.footer;\n        this.prescriptionType = response.data.data.headerType.value;\n      });\n    },\n    clear() {\n      this.headerItem = \"\";\n    },\n    update(file) {\n      // handle file here. File will be an object.\n      // If multiple prop is true, it will return an object array of files.\n      this.headerItem.logo = file;\n    },\n    savePrintHeaderDetails() {\n      // let formData = new FormData();\n      // formData.append(\"file\", this.file);\n      this.headerItem.prescriptionType = this.prescriptionType;\n      this.$store.dispatch(\"savePrintHeaderDetails\", this.headerItem);\n    },\n    // handleFileUpload() {\n    //   this.file = this.$refs.file.files[0];\n    // },\n    onPickFile() {\n      this.$refs.fileInput.click();\n    },\n    onFilePicked(event) {\n      const files = event.target.files;\n      let filename = files[0].name;\n      if (filename.lastIndexOf(\".\") <= 0) {\n        return alert(\"Please add a valid file!\");\n      }\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", () => {\n        this.imageUrl = fileReader.result;\n      });\n      fileReader.readAsDataURL(files[0]);\n      this.image = files[0];\n      this.headerItem.image = this.image;\n    },\n    saveEmptyHeader() {\n      this.withoutHeaderItem.prescriptionType = this.prescriptionType;\n      this.$store.dispatch(\"savePrintHeaderDetails\", this.withoutHeaderItem);\n    }\n  }\n};\n",{"version":3,"sources":["prescriptionHeaderSettings.vue"],"names":[],"mappingsfile":"prescriptionHeaderSettings.vue","sourceRoot":"src/views/settings","sourcesContent":["<template>\n  <div>\n    <v-container>\n      <v-toolbar flat color=\"white\">\n        <v-toolbar-title class=\"grey--text\">Prescription Header Details</v-toolbar-title>\n      </v-toolbar>\n      <v-radio-group v-model=\"prescriptionType\" row>\n        <v-radio label=\"With Header\" value=\"withHeader\" color=\"red\"></v-radio>\n        <v-radio label=\"Without Header\" value=\"withoutHeader\" color=\"red\"></v-radio>\n      </v-radio-group>\n      <v-form class=\"px-3\" ref=\"form\" id=\"form\" v-if=\"prescriptionType === 'withHeader'\">\n        <v-container grid-list-md>\n          <v-layout wrap>\n            <v-flex md9>\n              <h4>Doctor Details</h4>\n              <v-layout wrap ml-2>\n                <v-flex xs12>\n                  <v-text-field label=\"Name\" v-model=\"headerItem.doctorName\"></v-text-field>\n                </v-flex>\n                <v-flex xs12>\n                  <v-text-field label=\"Degree\" v-model=\"headerItem.degree\"></v-text-field>\n                </v-flex>\n              </v-layout>\n              <h4>Chamber Details</h4>\n              <v-layout wrap ml-2>\n                <v-flex xs12>\n                  <v-text-field label=\"Name\" v-model=\"headerItem.chamberName\"></v-text-field>\n                </v-flex>\n                <v-flex xs12>\n                  <v-text-field label=\"Address\" v-model=\"headerItem.address\"></v-text-field>\n                </v-flex>\n                <v-flex xs12>\n                  <v-text-field label=\"Telephone\" v-model=\"headerItem.telephone\"></v-text-field>\n                </v-flex>\n                <v-flex xs12>\n                  <v-text-field label=\"Mobile\" v-model=\"headerItem.cellphone\"></v-text-field>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n            <v-divider class=\"mx-2\" inset vertical></v-divider>\n            <v-flex md2>\n              <v-layout wrap>\n                <v-flex xs12>\n                  <!-- <upload-btn title=\"Upload image\" @file-update=\"update\"></upload-btn> -->\n                  <label>\n                    File\n                    <v-btn raised @click=\"onPickFile\">Upload Image</v-btn>\n                    <input\n                      type=\"file\"\n                      id=\"file\"\n                      ref=\"fileInput\"\n                      style=\"display:none\"\n                      accept=\"image/*\"\n                      @change=\"onFilePicked\"\n                    />\n                  </label>\n                  <v-flex ml-3 mt-3>\n                    <img :src=\"imageUrl\" height=\"150\" />\n                  </v-flex>\n                </v-flex>\n              </v-layout>\n            </v-flex>\n          </v-layout>\n        </v-container>\n        <v-divider></v-divider>\n        <!-- <v-spacer></v-spacer> -->\n        <v-layout wrap>\n          <v-spacer></v-spacer>\n          <v-btn color=\"warning darken-1\" dark @click=\"clear\">Clear</v-btn>\n          <v-btn color=\"primary\" dark @click=\"savePrintHeaderDetails\">Save</v-btn>\n        </v-layout>\n      </v-form>\n      <v-form class=\"px-3\" v-if=\"prescriptionType === 'withoutHeader'\">\n        <v-container grid-list-md>\n          <v-layout wrap>\n            <v-flex xs12 md6 class=\"text-lg-center\">\n              <v-text-field label=\"Header Space (in cm)\" v-model=\"withoutHeaderItem.headerSpace\"></v-text-field>\n              <v-text-field label=\"Footer Space (in cm)\" v-model=\"withoutHeaderItem.footerSpace\"></v-text-field>\n            </v-flex>\n            <v-flex md6></v-flex>\n            <v-spacer></v-spacer>\n            <!-- <v-btn color=\"warning darken-1\" dark @click=\"clear\">Clear</v-btn> -->\n            <v-btn color=\"primary\" dark @click=\"saveEmptyHeader\">Save</v-btn>\n          </v-layout>\n        </v-container>\n      </v-form>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport UploadButton from \"vuetify-upload-button\";\n\nexport default {\n  components: {\n    \"upload-btn\": UploadButton\n  },\n  data: () => ({\n    prescriptionType: \"\",\n    headerItem: {\n      doctorName: \"\",\n      degree: \"\",\n      chamberName: \"\",\n      telephone: \"\",\n      cellphone: \"\",\n      address: \"\",\n      image: \"\",\n      prescriptionType: \"\"\n    },\n    withoutHeaderItem: {\n      headerSpace: \"\",\n      footerSpace: \"\"\n    },\n    imageUrl: \"\",\n    image: null\n  }),\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.$store.dispatch(\"getPrintHeaderDetails\").then(response => {\n        this.headerItem.doctorName = response.data.data.withHeader.doctor_name;\n        this.headerItem.degree = response.data.data.withHeader.degree;\n        this.headerItem.chamberName =\n          response.data.data.withHeader.chamber_name;\n        this.headerItem.telephone = response.data.data.withHeader.phone;\n        this.headerItem.cellphone = response.data.data.withHeader.mobile;\n        this.headerItem.address = response.data.data.withHeader.address;\n        this.withoutHeaderItem.headerSpace =\n          response.data.data.withoutHeader.header;\n        this.withoutHeaderItem.footerSpace =\n          response.data.data.withoutHeader.footer;\n        this.prescriptionType = response.data.data.headerType.value;\n      });\n    },\n    clear() {\n      this.headerItem = \"\";\n    },\n    update(file) {\n      // handle file here. File will be an object.\n      // If multiple prop is true, it will return an object array of files.\n      this.headerItem.logo = file;\n    },\n    savePrintHeaderDetails() {\n      // let formData = new FormData();\n      // formData.append(\"file\", this.file);\n      this.headerItem.prescriptionType = this.prescriptionType;\n      this.$store.dispatch(\"savePrintHeaderDetails\", this.headerItem);\n    },\n    // handleFileUpload() {\n    //   this.file = this.$refs.file.files[0];\n    // },\n    onPickFile() {\n      this.$refs.fileInput.click();\n    },\n    onFilePicked(event) {\n      const files = event.target.files;\n      let filename = files[0].name;\n      if (filename.lastIndexOf(\".\") <= 0) {\n        return alert(\"Please add a valid file!\");\n      }\n      const fileReader = new FileReader();\n      fileReader.addEventListener(\"load\", () => {\n        this.imageUrl = fileReader.result;\n      });\n      fileReader.readAsDataURL(files[0]);\n      this.image = files[0];\n      this.headerItem.image = this.image;\n    },\n    saveEmptyHeader() {\n      this.withoutHeaderItem.prescriptionType = this.prescriptionType;\n      this.$store.dispatch(\"savePrintHeaderDetails\", this.withoutHeaderItem);\n    }\n  }\n};\n</script>"]}]}