{"remainingRequest":"/var/www/minibank/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/minibank/node_modules/vuetify-loader/lib/loader.js!/var/www/minibank/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/minibank/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/minibank/src/views/doctors/doctorsList.vue?vue&type=template&id=af9b4426&scoped=true&","dependencies":[{"path":"/var/www/minibank/src/views/doctors/doctorsList.vue","mtime":1570628808964},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"\" } },\n    [\n      _c(\n        \"v-toolbar\",\n        { attrs: { flat: \"\", color: \"white\" } },\n        [\n          _c(\"v-toolbar-title\", { staticClass: \"grey--text\" }, [\n            _vm._v(\"Doctors List\")\n          ]),\n          _c(\"v-divider\", {\n            staticClass: \"mx-2\",\n            attrs: { inset: \"\", vertical: \"\" }\n          }),\n          _c(\"v-spacer\"),\n          _c(\n            \"v-dialog\",\n            {\n              attrs: { \"max-width\": \"500px\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"activator\",\n                  fn: function(ref) {\n                    var on = ref.on\n                    return [\n                      _c(\"v-btn\", _vm._g({ staticClass: \"btn\" }, on), [\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"btnLogo\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          },\n                          [\n                            _c(\n                              \"svg\",\n                              {\n                                attrs: {\n                                  width: \"36\",\n                                  height: \"36\",\n                                  viewBox: \"0 0 36 36\"\n                                }\n                              },\n                              [\n                                _c(\"path\", {\n                                  attrs: {\n                                    fill: \"#FF0000\",\n                                    d: \"M16 16v14h4V20z\"\n                                  }\n                                }),\n                                _c(\"path\", {\n                                  attrs: {\n                                    fill: \"#000080\",\n                                    d: \"M30 16H20l-4 4h14z\"\n                                  }\n                                }),\n                                _c(\"path\", {\n                                  attrs: {\n                                    fill: \"#008000\",\n                                    d: \"M6 16v4h10l4-4z\"\n                                  }\n                                }),\n                                _c(\"path\", {\n                                  attrs: {\n                                    fill: \"#FFD700\",\n                                    d: \"M20 16V6h-4v14z\"\n                                  }\n                                }),\n                                _c(\"path\", {\n                                  attrs: { fill: \"none\", d: \"M0 0h36v36H0z\" }\n                                })\n                              ]\n                            )\n                          ]\n                        ),\n                        _c(\"span\", { staticClass: \"btnText\" }, [\n                          _vm._v(\"Create Doctor\")\n                        ])\n                      ])\n                    ]\n                  }\n                }\n              ]),\n              model: {\n                value: _vm.dialog,\n                callback: function($$v) {\n                  _vm.dialog = $$v\n                },\n                expression: \"dialog\"\n              }\n            },\n            [\n              _c(\n                \"v-card\",\n                { attrs: { id: \"modal\" } },\n                [\n                  _c(\"v-card-title\", [\n                    _c(\"span\", { attrs: { id: \"modalTitle\" } }, [\n                      _vm._v(_vm._s(_vm.formTitle))\n                    ])\n                  ]),\n                  _c(\"v-divider\"),\n                  _c(\n                    \"v-card-text\",\n                    [\n                      _c(\n                        \"v-form\",\n                        { ref: \"form\", staticClass: \"px-3\" },\n                        [\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              label: \"Full Name\",\n                              \"prepend-icon\": \"edit\",\n                              rules: _vm.inputRules\n                            },\n                            model: {\n                              value: _vm.editedItem.name,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editedItem, \"name\", $$v)\n                              },\n                              expression: \"editedItem.name\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              label: \"Email\",\n                              \"prepend-icon\": \"email\",\n                              rules: _vm.emailRules\n                            },\n                            model: {\n                              value: _vm.editedItem.email,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editedItem, \"email\", $$v)\n                              },\n                              expression: \"editedItem.email\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              label: \"Contact\",\n                              type: \"number\",\n                              \"prepend-icon\": \"contacts\",\n                              rules: _vm.contactRules\n                            },\n                            model: {\n                              value: _vm.editedItem.contact,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editedItem, \"contact\", $$v)\n                              },\n                              expression: \"editedItem.contact\"\n                            }\n                          }),\n                          _c(\"v-text-field\", {\n                            attrs: {\n                              label: \"Work Area\",\n                              \"prepend-icon\": \"local_hospital\",\n                              rules: _vm.inputRules\n                            },\n                            model: {\n                              value: _vm.editedItem.workarea,\n                              callback: function($$v) {\n                                _vm.$set(_vm.editedItem, \"workarea\", $$v)\n                              },\n                              expression: \"editedItem.workarea\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"v-divider\"),\n                  _c(\n                    \"v-card-actions\",\n                    [\n                      _c(\"v-spacer\"),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"blue darken-1\", flat: \"\" },\n                          on: { click: _vm.close }\n                        },\n                        [_vm._v(\"Cancel\")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"blue darken-1\", flat: \"\" },\n                          on: { click: _vm.save }\n                        },\n                        [_vm._v(\"Save\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"v-data-table\", {\n        staticClass: \"elevation-1 ma-4\",\n        attrs: { headers: _vm.headers, items: _vm.desserts },\n        scopedSlots: _vm._u([\n          {\n            key: \"items\",\n            fn: function(props) {\n              return [\n                _c(\"td\", { staticClass: \"text-xs\" }, [\n                  _vm._v(_vm._s(props.item.name))\n                ]),\n                _c(\"td\", { staticClass: \"text-xs\" }, [\n                  _vm._v(_vm._s(props.item.email))\n                ]),\n                _c(\"td\", { staticClass: \"text-xs\" }, [\n                  _vm._v(_vm._s(props.item.contact))\n                ]),\n                _c(\"td\", { staticClass: \"text-xs\" }, [\n                  _vm._v(_vm._s(props.item.workarea))\n                ]),\n                _c(\"td\", { staticClass: \"text-xs\" }, [\n                  _vm._v(_vm._s(props.item.patient_no))\n                ]),\n                _c(\n                  \"td\",\n                  { staticClass: \"text-xs layout px-0\" },\n                  [\n                    _c(\n                      \"v-tooltip\",\n                      { attrs: { top: \"\" } },\n                      [\n                        _c(\n                          \"v-btn\",\n                          {\n                            attrs: {\n                              slot: \"activator\",\n                              small: \"\",\n                              fab: \"\",\n                              dark: \"\",\n                              color: \"primary\"\n                            },\n                            slot: \"activator\"\n                          },\n                          [_c(\"v-icon\", [_vm._v(\"pageview\")])],\n                          1\n                        ),\n                        _c(\"span\", [_vm._v(\"View Details\")])\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"v-tooltip\",\n                      { attrs: { top: \"\" } },\n                      [\n                        _c(\n                          \"v-btn\",\n                          {\n                            attrs: {\n                              slot: \"activator\",\n                              small: \"\",\n                              fab: \"\",\n                              dark: \"\",\n                              color: \"cyan\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.editItem(props.item)\n                              }\n                            },\n                            slot: \"activator\"\n                          },\n                          [_c(\"v-icon\", [_vm._v(\"edit\")])],\n                          1\n                        ),\n                        _c(\"span\", [_vm._v(\"Edit Doctor Details\")])\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"v-tooltip\",\n                      { attrs: { top: \"\" } },\n                      [\n                        _c(\n                          \"v-btn\",\n                          {\n                            attrs: {\n                              slot: \"activator\",\n                              small: \"\",\n                              fab: \"\",\n                              dark: \"\",\n                              color: \"red\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.deleteItem(props.item)\n                              }\n                            },\n                            slot: \"activator\"\n                          },\n                          [_c(\"v-icon\", [_vm._v(\"delete\")])],\n                          1\n                        ),\n                        _c(\"span\", [_vm._v(\"Delete Doctor\")])\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          },\n          {\n            key: \"no-data\",\n            fn: function() {\n              return [\n                _c(\n                  \"v-btn\",\n                  {\n                    attrs: { color: \"primary\" },\n                    on: { click: _vm.initialize }\n                  },\n                  [_vm._v(\"Reset\")]\n                )\n              ]\n            },\n            proxy: true\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}