{"remainingRequest":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js!/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js!/var/www/prescription_frontEnd/node_modules/vuetify-loader/lib/loader.js!/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/prescription_frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/prescription_frontEnd/src/views/patients/patientsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/prescription_frontEnd/src/views/patients/patientsList.vue","mtime":1569850765580},{"path":"/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/var/www/prescription_frontEnd/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Format from 'date-fns/format';\nexport default {\n  data: function data() {\n    return {\n      // search: null,\n      autoUpdate: true,\n      searchPatient: null,\n      stay: true,\n      searchPatients: {\n        searchInput: ''\n      },\n      searchPatientsBy: {\n        date: '',\n        time: 1\n      },\n      gender: [],\n      dialog: false,\n      inputRules: [function (v) {\n        return !!v || 'This Field is required';\n      }],\n      contactRules: [function (v) {\n        return !!v || 'This Field is required';\n      }, function (v) {\n        return v && v.length == 11 || 'Contact length must be 11 characters';\n      }],\n      editedIndex: -1,\n      editedItem: {\n        name: '',\n        age: '',\n        contact: '',\n        doctor_name: '',\n        date: '',\n        searchDate: '',\n        time: '',\n        gender: '',\n        editPatientsCheck: ''\n      },\n      defaultItem: {\n        name: '',\n        age: '',\n        contact: '',\n        doctor_name: '',\n        date: '',\n        time: '',\n        gender: '',\n        editPatientsCheck: ''\n      }\n    };\n  },\n  created: function created() {\n    this.fetchData();\n    this.initialize();\n  },\n  computed: {\n    jointPatientsDetails: function jointPatientsDetails() {\n      return this.$store.getters.getJointPatientsDetails;\n    },\n    desserts: function desserts() {\n      return this.$store.getters.getPatients;\n    },\n    userInfo: function userInfo() {\n      return this.$store.getters.getUserInfo;\n    },\n    patientInfo: function patientInfo() {\n      return this.$store.getters.getPatientsBySearch;\n    },\n    searchFilter: function searchFilter() {\n      var _this = this;\n\n      return this.patientInfo.filter(function (getPatient) {\n        return getPatient.name.toLowerCase().match(_this.searchPatient) || getPatient.contact.match(_this.searchPatient);\n      });\n    },\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? 'Add Patient' : 'Edit Patient';\n    },\n    formattedDate: function formattedDate() {\n      return this.date ? Format(this.date, 'YYYY MMM Do') : '';\n    },\n    headers: function headers() {\n      return this.$store.state.patientsHeaders;\n    },\n    getTimeSlot: function getTimeSlot() {\n      return this.$store.getters.getTimeSlots;\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    searchPatient: function searchPatient(val) {\n      this.retrievePatientbySearch(val);\n    }\n  },\n  filters: {\n    timeFormate: function timeFormate(time) {\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) {\n        // If time format correct\n        time = time.slice(1); // Remove full string match value\n\n        time[5] = +time[0] < 12 ? \" AM\" : \" PM\"; // Set AM/PM\n\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n\n      return time.join(\"\"); // return adjusted time or original string\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.$store.dispatch('getPatient').then(function (response) {\n        _this2.searchPatientsBy.date = response.data.data.date;\n        _this2.searchPatientsBy.time = response.data.data.time.id;\n      });\n      this.$store.dispatch(\"getTimeSlot\");\n    },\n    initialize: function initialize() {\n      this.gender = ['Male', 'Female', 'Others'];\n    },\n    retrievePatientbyDate: function retrievePatientbyDate() {\n      this.$store.dispatch('retrievePatientbyDate', this.searchPatientsBy);\n    },\n    retrievePatientbySearch: function retrievePatientbySearch(searchBy) {\n      var searchInfo = {\n        'searchInput': searchBy\n      };\n      this.$store.dispatch('retrievePatientbySearch', searchInfo);\n    },\n    editItem: function editItem(item) {\n      this.stay = false;\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n      this.editedItem.editPatientsCheck = 'editPatientInfo';\n      this.dialog = true;\n      console.log(this.editedItem.editPatientsCheck);\n    },\n    addOldPatientSchedule: function addOldPatientSchedule(item) {\n      this.editedIndex = this.searchFilter.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n    },\n    deleteItem: function deleteItem(item) {\n      var index = this.desserts.indexOf(item);\n\n      if (confirm('Are you sure you want to delete this item?')) {\n        this.desserts.splice(index, 1);\n        this.$store.dispatch('deletePatient', item.id);\n      }\n    },\n    close: function close() {\n      var _this3 = this;\n\n      this.dialog = false;\n      this.stay = true;\n      setTimeout(function () {\n        _this3.defaultItem.time = _this3.$store.getters.getTimeSlots.start_time + '-' + _this3.$store.getters.getTimeSlots.end_time;\n        _this3.editedItem = _Object$assign({}, _this3.defaultItem);\n        _this3.editedIndex = -1;\n      }, 300);\n    },\n    save: function save() {\n      if (this.$refs.form.validate()) {\n        if (this.editedIndex > -1) {\n          if (this.editedItem.editPatientsCheck == 'editPatientInfo') {\n            this.$store.dispatch('updatePatient', this.editedItem);\n\n            _Object$assign(this.desserts[this.editedIndex], this.editedItem);\n\n            this.searchPatients.searchInput = '';\n          } else {\n            this.editedItem.editPatientsCheck = 'createSerial';\n            this.$store.dispatch('updatePatient', this.editedItem); // Object.assign(this.desserts[this.editedIndex], this.editedItem)\n\n            this.searchPatients.searchInput = '';\n          }\n        } else {\n          // console.log('save')\n          this.$store.dispatch('savePatient', this.editedItem); // this.desserts.push(this.editedItem)\n        }\n\n        this.close();\n        this.stay = true;\n      }\n    },\n    viewDateFormate: function viewDateFormate(date) {\n      return date ? Format(date, 'YYYY MMM Do') : '';\n    },\n    attachSearchValue: function attachSearchValue(item) {\n      this.editedIndex = this.searchFilter.indexOf(item);\n      this.editedItem = _Object$assign({}, item);\n    },\n    getPrescriptionList: function getPrescriptionList(item) {\n      this.$router.push(\"/patientsReport/report/\" + item.id);\n    },\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    handleButtonClick: function handleButtonClick() {\n      this.stay = true, this.resetValidation();\n    }\n  }\n};",{"version":3,"sources":["patientsList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"vue-app\">\n    <v-toolbar flat color=\"white\">\n      <v-toolbar-title class=\"grey--text\">Patients List</v-toolbar-title>\n      <v-divider\n        class=\"mx-2\"\n        inset\n        vertical\n      ></v-divider>\n      <v-spacer></v-spacer>\n      <template v-slot:extension>\n        \n      </template>\n      <v-dialog v-model=\"dialog\" max-width=\"500px\">\n        <template v-slot:activator=\"{ on }\">\n          <v-btn class=\"btn\" v-on=\"on\" @click=\"handleButtonClick\">\n            <span aria-hidden=\"true\" class=\"btnLogo\">\n              <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\n                <path fill=\"#FF0000\" d=\"M16 16v14h4V20z\"></path>\n                <path fill=\"#000080\" d=\"M30 16H20l-4 4h14z\"></path>\n                <path fill=\"#008000\" d=\"M6 16v4h10l4-4z\"></path>\n                <path fill=\"#FFD700\" d=\"M20 16V6h-4v14z\"></path>\n                <path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\n              </svg>\n            </span>\n            <span class=\"btnText\">Create Patient</span>\n          </v-btn>\n        </template>\n        <v-card id=\"modal\">\n          <v-card-title>\n            <span id=\"modalTitle\">{{ formTitle }}</span>\n          </v-card-title>\n          <v-divider></v-divider>\n          <v-card-text>\n\n            <v-combobox\n              v-model=\"searchPatients.searchInput\"\n              :items=\"searchFilter\"\n              :search-input.sync=\"searchPatient\"\n              item-text=\"contact\"\n              item-value=\"name\"\n              item-disabled\n              hint=\"Search by Contact Number\"\n              label=\"Search Old Patient\"\n              prepend-inner-icon=\"search\"\n              outline\n              open-on-clear\n              @input=\"addOldPatientSchedule\"\n            >\n              <template v-slot:item=\"data\">\n                <v-list-tile-content >\n                  <v-list-tile-title v-html=\"data.item.name\"></v-list-tile-title>\n                  <v-list-tile-sub-title v-html=\"'Contact: ' +data.item.contact +', Age: '+ data.item.age\"></v-list-tile-sub-title>\n                </v-list-tile-content>\n               <!-- <v-btn small fab dark color=\"cyan darken-2\" slot=\"activator\" @click=\"addOldPatientSchedule(data.item)\">\n                    <v-icon>add</v-icon>\n                </v-btn> -->\n              </template>\n            </v-combobox>\n          </v-card-text>\n          <v-card-text>\n              <v-form class=\"px-3\" ref=\"form\">\n                <v-text-field label=\"Patient Name\" v-model=\"editedItem.name\" prepend-icon=\"add_box\" :rules=\"inputRules\"></v-text-field>\n                <v-text-field label=\"Age\" v-model=\"editedItem.age\" prepend-icon=\"add_to_queue\" type=\"number\" :rules=\"inputRules\"></v-text-field>\n                <v-text-field label=\"Contact\" v-model=\"editedItem.contact\" prepend-icon=\"settings_phone\" type=\"number\" :rules=\"contactRules\"></v-text-field>\n                <!-- <v-text-field label=\"Doctor Name\" v-model=\"editedItem.doctor_name\" prepend-icon=\"add_to_queue\" :rules=\"inputRules\"></v-text-field> -->\n                <v-select\n                v-model=\"editedItem.gender\"\n                :items=\"gender\"\n                label=\"Select Gender\"\n                prepend-icon=\"person\"\n                >\n                  <template v-slot:item=\"props\">\n                    <v-list-tile-content >\n                      <v-list-tile-title v-html=\"props.item\"></v-list-tile-title>\n                    </v-list-tile-content>\n                  </template>\n                </v-select>\n                <v-menu v-if=\"stay\">\n                  <v-text-field :value=\"viewDateFormate(editedItem.date)\" slot=\"activator\" label=\"Select Date\" prepend-icon=\"date_range\" :rules=\"inputRules\"></v-text-field>\n                  <v-date-picker v-model=\"editedItem.date\"></v-date-picker>\n                </v-menu>\n                  <v-select\n                  v-model=\"editedItem.time\"\n                  :items=\"getTimeSlot\"\n                  item-text=\"time\"\n                  item-value=\"id\"\n                  label=\"Select Time\"\n                  prepend-icon=\"access_time\"\n                  v-if=\"stay\"\n                  >\n                    <template v-slot:item=\"data\">\n                      <v-list-tile-content >\n                        <v-list-tile-title v-html=\"data.item.start_time + '-' + data.item.end_time\"></v-list-tile-title>\n                        <!-- <v-list-tile-sub-title v-html=\"'Contact: ' +data.item.contact +', Age: '+ data.item.age\"></v-list-tile-sub-title> -->\n                      </v-list-tile-content>\n                    </template>\n                  </v-select>\n              </v-form>\n          </v-card-text>\n          <v-divider></v-divider>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" flat @click=\"close\">Cancel</v-btn>\n            <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-toolbar>\n    <v-layout row wrap>\n      <v-flex xs12 sm12 md8>\n        <v-layout row wrap>\n        <v-flex xs12 sm5 md5>\n        <v-menu>\n          <v-text-field :value=\"viewDateFormate(searchPatientsBy.date)\" slot=\"activator\" label=\"Filter by date\" prepend-icon=\"date_range\"></v-text-field>\n          <v-date-picker v-model=\"searchPatientsBy.date\"></v-date-picker>\n        </v-menu>\n        </v-flex>\n         <v-flex xs8 sm5 md5>\n        <v-select\n        v-model=\"searchPatientsBy.time\"\n        :items=\"getTimeSlot\"\n        item-text=\"time\"\n        item-value=\"id\"\n        label=\"Select Time\"\n        prepend-icon=\"access_time\"\n        >\n          <template v-slot:item=\"data\">\n            <v-list-tile-content >\n              <v-list-tile-title v-html=\"data.item.start_time + '-' + data.item.end_time\"></v-list-tile-title>\n            </v-list-tile-content>\n          </template>\n        </v-select>\n      </v-flex>\n      <v-flex xs4 sm2 md2>\n      <v-btn class=\"primary\" flat @click=\"retrievePatientbyDate\">Search</v-btn>\n      </v-flex>\n      </v-layout>\n      </v-flex>\n      <v-flex md4>\n      </v-flex>\n    </v-layout>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"desserts\"\n      class=\"elevation-1 ma-4\"\n    >\n      <template v-slot:items=\"props\">\n        <td class=\"text-xs\">{{ props.item.serial }}</td>\n        <td class=\"text-xs\"><v-chip color=\"cyan\" text-color=\"white\">{{ props.item.name }}</v-chip></td>\n        <td class=\"text-xs\">{{ props.item.age }}</td>\n        <td class=\"text-xs\">{{ props.item.gender }}</td>\n        <td class=\"text-xs\">{{ props.item.contact }}</td>\n        <td class=\"text-xs\">{{ viewDateFormate(props.item.date) }}</td>\n        <td class=\"text-xs\">{{ props.item.time }}</td>\n        <td class=\"text-xs\">\n            <v-tooltip top>\n                <v-btn small flat icon class=\"button\" color=\"cyan darken-2\" slot=\"activator\" @click=\"editItem(props.item)\">\n                    <v-icon>edit</v-icon>\n                </v-btn>\n                <span>Edit Patient Details</span>\n            </v-tooltip>\n            <v-tooltip top>\n                <v-btn small flat icon dark class=\"button\" color=\"indigo\" v-if=\"userInfo.user_type == 'doctor'\" slot=\"activator\" router: v-bind:to=\"'../prescriptions/patient/' + props.item.id + '/'+ props.item.schedule_id + '/' + props.item.date\">\n                    <v-icon>assignment_ind</v-icon>\n                </v-btn>\n                <span>Prescription</span>\n            </v-tooltip>\n             <v-tooltip top>\n                <v-btn small flat icon dark class=\"button\" style=\"background-color:#1693F3\" slot=\"activator\" @click=\"getPrescriptionList(props.item)\">\n                    <span>{{ props.item.visited_count }}</span>\n                </v-btn>\n                <span>Number of Prescription</span>\n            </v-tooltip>\n            <v-tooltip top>\n                <v-btn small flat icon dark class=\"button\" color=\"red\" slot=\"activator\" @click=\"deleteItem(props.item)\">\n                    <v-icon>delete</v-icon>\n                </v-btn>\n                <span>Delete Patient</span>\n            </v-tooltip>\n        </td>\n      </template>\n      <template v-slot:no-data>\n        <h4>No Patient</h4>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport Format from 'date-fns/format'\n\n\n  export default {\n    data: () => ({\n      // search: null,\n      autoUpdate: true,\n      searchPatient: null,\n      stay: true,\n      searchPatients: { \n        searchInput: ''\n      },\n      searchPatientsBy: {\n        date: '',\n        time: 1\n      },\n      gender: [],\n      dialog: false,\n      inputRules: [\n        (v) => !!v || 'This Field is required',\n      ],\n      contactRules: [\n        (v) => !!v || 'This Field is required',\n        (v) => (v && v.length == 11) || 'Contact length must be 11 characters',\n\n      ],\n      editedIndex: -1,\n      editedItem: {\n        name: '',\n        age: '',\n        contact: '',\n        doctor_name: '',\n        date: '',\n        searchDate: '',\n        time: '',\n        gender: '',\n        editPatientsCheck: ''\n      },\n      defaultItem: {\n        name: '',\n        age: '',\n        contact: '',\n        doctor_name: '',\n        date: '',\n        time: '',\n        gender: '',\n        editPatientsCheck: ''\n      }\n    }),\n    created () {\n      this.fetchData()\n      this.initialize()\n    },\n\n    computed: {\n      jointPatientsDetails(){\n        return this.$store.getters.getJointPatientsDetails;\n      },\n      desserts(){\n        return this.$store.getters.getPatients\n        \n      },\n      userInfo() {\n        return this.$store.getters.getUserInfo;\n      },\n      patientInfo() {\n        return this.$store.getters.getPatientsBySearch\n      },\n      searchFilter(){\n        return this.patientInfo.filter((getPatient) => {\n          return (getPatient.name.toLowerCase().match(this.searchPatient) || getPatient.contact.match(this.searchPatient))\n        });\n      },\n      formTitle () {\n        return this.editedIndex === -1 ? 'Add Patient' : 'Edit Patient'\n      },\n      formattedDate (){\n        return this.date ? Format(this.date, 'YYYY MMM Do'): ''\n      },\n      headers(){\n        return this.$store.state.patientsHeaders;\n      },\n      getTimeSlot(){\n        return this.$store.getters.getTimeSlots;\n      }\n        \n    },\n    watch: {\n      dialog (val) {\n        val || this.close()\n      },\n      searchPatient (val) {\n        this.retrievePatientbySearch(val)\n      }\n    },\n    filters: {\n    timeFormate(time) {\n        time = time\n          .toString()\n          .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) {\n          // If time format correct\n          time = time.slice(1); // Remove full string match value\n          time[5] = +time[0] < 12 ? \" AM\" : \" PM\"; // Set AM/PM\n          time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        return time.join(\"\"); // return adjusted time or original string\n      }\n    },\n    methods: {\n      fetchData() {\n        this.$store.dispatch('getPatient')\n        .then(response => {\n          this.searchPatientsBy.date = response.data.data.date\n          this.searchPatientsBy.time = response.data.data.time.id\n        })\n        this.$store.dispatch(\"getTimeSlot\");\n\n      },\n      initialize(){\n        this.gender = ['Male', 'Female', 'Others']\n      },\n      retrievePatientbyDate(){\n        this.$store.dispatch('retrievePatientbyDate', this.searchPatientsBy);\n      },\n      retrievePatientbySearch(searchBy){\n          var searchInfo = {\n            'searchInput' : searchBy\n          }\n        this.$store.dispatch('retrievePatientbySearch', searchInfo);\n      },\n      editItem (item) {\n        this.stay = false\n        this.editedIndex = this.desserts.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.editedItem.editPatientsCheck = 'editPatientInfo'\n        this.dialog = true\n        console.log(this.editedItem.editPatientsCheck)\n      },\n      addOldPatientSchedule(item){\n         this.editedIndex = this.searchFilter.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n      },\n      deleteItem (item) {\n        const index = this.desserts.indexOf(item)\n        if(confirm('Are you sure you want to delete this item?')){  \n          this.desserts.splice(index, 1);\n          this.$store.dispatch('deletePatient',item.id);\n        }\n        },\n      close () {\n        this.dialog = false\n        this.stay = true\n        setTimeout(() => {\n          this.defaultItem.time = this.$store.getters.getTimeSlots.start_time + '-'+ this.$store.getters.getTimeSlots.end_time\n          this.editedItem = Object.assign({}, this.defaultItem)\n          this.editedIndex = -1\n        }, 300)\n      },\n      save () {\n         if (this.$refs.form.validate()) {\n          if (this.editedIndex > -1) {\n            if(this.editedItem.editPatientsCheck == 'editPatientInfo'){\n             this.$store.dispatch('updatePatient', this.editedItem);\n              Object.assign(this.desserts[this.editedIndex], this.editedItem)\n            this.searchPatients.searchInput = '';\n            } else{\n              this.editedItem.editPatientsCheck = 'createSerial'\n              this.$store.dispatch('updatePatient', this.editedItem);\n              // Object.assign(this.desserts[this.editedIndex], this.editedItem)\n            this.searchPatients.searchInput = '';\n            }\n         \n            \n          } else {\n            // console.log('save')\n            this.$store.dispatch('savePatient',this.editedItem)\n            // this.desserts.push(this.editedItem)\n          }\n          this.close()\n          this.stay = true\n\n        }\n      },\n      viewDateFormate (date){\n            return date ? Format(date, 'YYYY MMM Do'): ''\n      },\n      attachSearchValue(item){\n         this.editedIndex = this.searchFilter.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n      },\n      getPrescriptionList(item){\n        this.$router.push(\"/patientsReport/report/\" + item.id)\n      },\n      resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    handleButtonClick(){\n      this.stay = true,\n      this.resetValidation()\n    }\n    }\n  }\n</script>\n\n<style scoped>\n\n#modal {\n  font-family: 'Ubuntu', sans-serif;\n}\n\n#modalTitle {\n  font-size: 20px;\n}\n.btn {\n  z-index: 0;\n  background-color: #fff;\n  color: #3c4043;\n  padding: 0 24px;\n  font-family: 'Ubuntu', sans-serif;\n  font-size: .875rem;\n  font-weight: 500;\n  letter-spacing: .0107142857em;\n  text-transform: none;\n  line-height: 2.25rem;\n  border-radius: 24px;\n  width: auto;\n  max-width: 100%;\n  height: 48px;\n  box-shadow: 0 1px 2px 0 rgba(60,64,67,0.302), 0 1px 3px 1px rgba(60,64,67,0.149);\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  border: none;\n  fill: currentColor;\n  cursor: pointer;\n  overflow: hidden;\n}\n.btnLogo {\n  margin-right: 10px;\n  margin-top: 6px;\n}\n.btnText {\n  margin-bottom: 4px;\n}\n@media only screen and (max-width:600px){\n  .button{\n  width: 25px;\n  height: 25px;\n  }\n}\n\n</style>"],"sourceRoot":"src/views/patients"}]}