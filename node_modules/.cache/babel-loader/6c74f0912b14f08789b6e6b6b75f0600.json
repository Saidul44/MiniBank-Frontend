{"remainingRequest":"/var/www/minibank/node_modules/babel-loader/lib/index.js!/var/www/minibank/node_modules/vuetify-loader/lib/loader.js!/var/www/minibank/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/minibank/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/minibank/src/views/prescriptions/prescription.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/minibank/src/views/prescriptions/prescription.vue","mtime":1572700666820},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { allSettled } from \"q\";\nexport default {\n  data: function data() {\n    return {\n      customeDoseDisable: true,\n      newSymptom: \"\",\n      newMedicine: \"\",\n      newTest: \"\",\n      newSuggestion: \"\",\n      inputRules: [function (v) {\n        return !!v || \"This field is required\";\n      }],\n      information: {\n        name: \"\",\n        age: \"\",\n        contact: \"\"\n      },\n      customeDose: \"\",\n      dosages: \"\",\n      days: \"\",\n      // dosages: {\n      //   morning: 1,\n      //   noon: 1,\n      //   night: 1,\n      //   days: \"\"\n      // }\n      testName: \"\"\n    };\n  },\n  created: function created() {\n    this.fetchData();\n    this.$store.dispatch(\"getMedicine\");\n    this.$store.dispatch(\"getTest\"); // this.$store.commit(\"prescriptionDate\", this.$route.params.date);\n\n    this.newSuggestion = this.getSuggestion;\n  },\n  computed: {\n    desserts: function desserts() {\n      return this.$store.getters.getPrescriptionHead;\n    },\n    symptoms: function symptoms() {\n      return this.$store.state.symptomsPrescription;\n    },\n    tests: function tests() {\n      this.newTest = \"\"; // console.log(this.$store.getters.getTestName);\n\n      return this.$store.getters.getTestName;\n    },\n    medicines: function medicines() {\n      return this.$store.state.medicinesPrescription;\n    },\n    getMedicine: function getMedicine() {\n      return this.$store.getters.getMedicines;\n    },\n    getSuggestion: function getSuggestion() {\n      return this.$store.getters.getSuggestion;\n    },\n    getTest: function getTest() {\n      // console.log(this.$store.getters.getTests);\n      return this.$store.getters.getTests;\n    },\n    getMedicineSchedule: function getMedicineSchedule() {\n      console.log(this.$store.getters.getMedicineSchedule);\n      return this.$store.getters.getMedicineSchedule;\n    },\n    prescriptionId: function prescriptionId() {\n      return this.$store.getters.prescriptionId;\n    }\n  },\n  methods: {\n    resetValidation: function resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    toogle: function toogle() {\n      this.customeDoseDisable = !this.customeDoseDisable;\n    },\n    save: function save() {\n      var _this = this;\n\n      // var data = {\n      //   schedule_id: this.$store.state.prescriptionScheduleId,\n      //   patient_id: this.$store.state.prescriptionHeadDetails.id\n      // };\n      // this.$store.dispatch(\"setVisited\", data);\n      this.$store.commit(\"addSuggestion\", this.newSuggestion);\n      this.$store.dispatch(\"savePrescription\").then(function (response) {\n        _this.$router.push(\"/prescriptions/\" + response.data.data.id);\n      }); // this.$store.dispatch(\"setVisited\", data);\n    },\n    getLabel: function getLabel(item) {\n      return item.name;\n    },\n    fetchData: function fetchData() {\n      this.$store.commit(\"resetPrescription\");\n\n      if (typeof this.$route.params.prescription_id !== \"undefined\") {\n        this.$store.dispatch(\"getDetailsForEditPrescription\", this.$route.params.prescription_id);\n      }\n\n      this.$store.dispatch(\"patientById\", this.$route.params.id);\n      this.$store.commit(\"prescriptionDate\", this.$route.params.date);\n      this.$store.commit(\"prescriptionScheduleId\", this.$route.params.schedule_id);\n      this.$store.dispatch(\"getMedicineSchedule\");\n    },\n    addSymptoms: function addSymptoms() {\n      this.$store.commit(\"addSymptoms\", this.newSymptom);\n      this.newSymptom = \"\"; // this.resetValidation();\n    },\n    removeSymptom: function removeSymptom(symptom) {\n      var index = this.$store.state.symptomsPrescription.indexOf(symptom);\n      this.$store.state.symptomsPrescription.splice(index, 1);\n    },\n    addMedicines: function addMedicines() {\n      if (this.customeDoseDisable) {\n        for (var i = 0; i < this.getMedicine.length; i++) {\n          if (this.getMedicine[i][\"id\"] == this.newMedicine) {\n            for (var j = 0; j < this.getMedicineSchedule.length; j++) {\n              if (this.getMedicineSchedule[j][\"id\"] == this.dosages) {\n                var medicine_dose = this.getMedicineSchedule[j];\n              }\n            }\n\n            this.$store.commit({\n              type: \"addMedicines\",\n              medicine: this.getMedicine[i],\n              dosages: medicine_dose,\n              days: this.days,\n              customeDoseCheck: true\n            }); // this.resetValidation();\n\n            break;\n          }\n        }\n      } else {\n        console.log(\"store\");\n\n        for (var i = 0; i < this.getMedicine.length; i++) {\n          if (this.getMedicine[i][\"id\"] == this.newMedicine) {\n            console.log(\"store\");\n            this.$store.commit({\n              type: \"addMedicines\",\n              medicine: this.getMedicine[i],\n              dosages: this.customeDose,\n              days: this.days,\n              customeDoseCheck: false\n            }); // this.resetValidation();\n\n            break;\n          }\n        }\n      }\n\n      this.newMedicine = \"\";\n      this.dosages = \"\";\n      this.customeDose = \"\";\n      this.days = \"\";\n    },\n    removeMedicine: function removeMedicine(medicine) {\n      var index = this.$store.state.medicinesPrescription.indexOf(medicine);\n      this.$store.state.medicinesPrescription.splice(index, 1); // const index = this.medicines.indexOf(medicine);\n      // this.medicines.splice(index, 1);\n    },\n    addTests: function addTests() {\n      for (var i = 0; i < this.getTest.length; i++) {\n        if (this.getTest[i][\"id\"] == this.newTest) {\n          this.$store.commit(\"addTests\", this.getTest[i]);\n          this.newTest = \"\";\n          console.log(this.$store.getters.getTestName);\n          break;\n        }\n      } // this.resetValidation();\n\n    },\n    removeTest: function removeTest(test) {\n      var index = this.$store.state.testsPrescription.indexOf(test);\n      this.$store.state.testsPrescription.splice(index, 1); // const index = this.medicines.indexOf(test);\n      // this.tests.splice(index, 1);\n    }\n  }\n};",{"version":3,"sources":["prescription.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"prescription\">\n    <v-layout row wrap>\n      <h1 class=\"heading grey--text ml-5\">Prescription</h1>\n    </v-layout>\n    <v-spacer></v-spacer>\n\n    <v-container grid-list-md>\n      <v-layout row wrap>\n        <v-flex xs12 sm6 md4>\n          <v-text-field outline label=\"Name\" v-model=\"desserts.name\"></v-text-field>\n        </v-flex>\n        <v-flex xs12 sm6 md2>\n          <v-text-field outline label=\"Age\" v-model=\"desserts.age\"></v-text-field>\n        </v-flex>\n        <v-flex xs12 sm6 md4>\n          <v-text-field outline label=\"Phone\" v-model=\"desserts.contact\"></v-text-field>\n        </v-flex>\n        <v-flex xs12 sm6 md2>\n          <v-text-field outline label=\"Sex\" v-model=\"desserts.gender\"></v-text-field>\n        </v-flex>\n      </v-layout>\n      <v-layout row wrap class=\"prescriptionField\">\n        <v-flex xs12 sm9 md3>\n          <v-layout column wrap>\n            <!-- <v-text-field name=\"input-1\" label=\"Styled Input\" id=\"styled-input\" class=\"styled-input\"></v-text-field> -->\n            <v-layout row wrap>\n              <v-flex xs10 sm9 md9>\n                <v-text-field\n                  v-model=\"newSymptom\"\n                  v-on:keyup.enter=\"addSymptoms\"\n                  label=\"Symptoms\"\n                  placeholder=\"Type Symptoms\"\n                  :rules=\"inputRules\"\n                ></v-text-field>\n              </v-flex>\n              <v-flex xs2 sm2 md2>\n                <v-btn small fab class=\"button small\" color=\"default\" @click=\"addSymptoms\">\n                  <v-icon>add</v-icon>\n                </v-btn>\n              </v-flex>\n            </v-layout>\n            <v-layout row wrap>\n              <v-flex md12>\n                <ul class=\"styleUl\">\n                  <li v-for=\"(symptom,index) in symptoms\" :key=\"symptom\">\n                    <v-layout row wrap>\n                      <v-flex md8 style=\"padding-top: 12px;\">\n                        <span>{{++index}}.{{symptom}}</span>\n                      </v-flex>\n                      <v-flex md4>\n                        <v-btn flat icon @click=\"removeSymptom(symptom )\" color=\"red\">\n                          <v-icon>delete</v-icon>\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                  </li>\n                </ul>\n              </v-flex>\n            </v-layout>\n          </v-layout>\n        </v-flex>\n        <v-divider class=\"mx-3\" inset vertical></v-divider>\n\n        <v-flex xs12 sm9 md4>\n          <v-layout column wrap>\n            <v-layout row wrap>\n              <v-flex xs10 sm9 md9>\n                <v-autocomplete\n                  :items=\"getTest\"\n                  item-text=\"name\"\n                  v-model=\"newTest\"\n                  item-value=\"id\"\n                  :allow-overflow=\"false\"\n                  default\n                  color=\"purple\"\n                  placeholder=\"Search...\"\n                  append-icon=\"$vuetify.icons.dropdown\"\n                  label=\"Tests\"\n                  v-on:keyup.enter=\"addTests\"\n                  :rules=\"inputRules\"\n                ></v-autocomplete>\n              </v-flex>\n              <v-flex xs2 sm2 md2>\n                <v-btn small fab class=\"button small\" color=\"default\" @click=\"addTests\">\n                  <v-icon>add</v-icon>\n                </v-btn>\n              </v-flex>\n            </v-layout>\n            <v-layout row wrap>\n              <v-flex md12>\n                <ul class=\"styleUl\">\n                  <li class=\"text-md-left\" v-for=\"(test,index) in tests\" :key=\"test.test_name\">\n                    <v-layout row wrap>\n                      <v-flex md9 style=\"padding-top: 12px;\">\n                        <span>{{++index}}.{{test.test_name}}</span>\n                      </v-flex>\n                      <v-flex md3>\n                        <v-btn flat icon @click=\"removeTest(test )\" color=\"red\">\n                          <v-icon>delete</v-icon>\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                  </li>\n                </ul>\n              </v-flex>\n            </v-layout>\n          </v-layout>\n        </v-flex>\n        <v-divider class=\"mx-4\" inset vertical></v-divider>\n\n        <v-flex xs10 sm9 md4>\n          <v-layout column wrap>\n            <v-layout row wrap>\n              <v-layout column wrap>\n                <v-autocomplete\n                  :items=\"getMedicine\"\n                  item-text=\"name\"\n                  item-value=\"id\"\n                  v-model=\"newMedicine\"\n                  label=\"Medicine\"\n                  placeholder=\"Search...\"\n                ></v-autocomplete>\n                <v-layout row wrap>\n                  <v-flex md9>\n                    <v-layout row wrap>\n                      <v-flex xs4 sm4 md10>\n                        <v-autocomplete\n                          v-if=\"customeDoseDisable\"\n                          :items=\"getMedicineSchedule\"\n                          item-text=\"dose\"\n                          item-value=\"id\"\n                          v-model=\"dosages\"\n                          label=\"Medicine Schedule\"\n                          placeholder=\"Search...\"\n                        ></v-autocomplete>\n                        <v-text-field\n                          v-else\n                          v-model=\"customeDose\"\n                          label=\"Custome Medicine Schedule\"\n                          placeholder=\"Type..\"\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs4 sm4 md2>\n                        <v-tooltip top>\n                          <v-btn\n                            fab\n                            small\n                            class=\"button small\"\n                            color=\"default\"\n                            slot=\"activator\"\n                            @click=\"toogle\"\n                          >\n                            <v-icon>edit</v-icon>\n                          </v-btn>\n                          <span v-if=\"customeDoseDisable\">Custome Medicine Schedule</span>\n                          <span v-else>Default Medicine Schedule</span>\n                        </v-tooltip>\n                      </v-flex>\n\n                      <!-- <v-flex xs4 sm4 md4>\n                        <v-btn\n                          fab\n                          small\n                          class=\"button medium\"\n                          color=\"grey lighten-2\"\n                          @click=\"dosages.morning = (dosages.morning ? 0 : 1)\"\n                        >{{dosages.morning}}</v-btn>\n                      </v-flex>\n                      <v-flex xs4 sm4 md4>\n                        <v-btn\n                          fab\n                          small\n                          class=\"button medium\"\n                          color=\"grey lighten-2\"\n                          @click=\"dosages.noon = (dosages.noon ? 0 : 1)\"\n                        >{{dosages.noon}}</v-btn>\n                      </v-flex>\n                      <v-flex xs4 sm4 md4>\n                        <v-btn\n                          fab\n                          small\n                          class=\"button medium\"\n                          color=\"grey lighten-2\"\n                          @click=\"dosages.night = (dosages.night ? 0 : 1)\"\n                        >{{dosages.night}}</v-btn>\n                      </v-flex>-->\n                    </v-layout>\n                  </v-flex>\n                  <v-flex xs10 sm10 md2>\n                    <v-text-field label=\"Days\" v-model=\"days\" v-on:keyup.enter=\"addMedicines\"></v-text-field>\n                  </v-flex>\n                  <v-flex xs2 sm2 md1>\n                    <v-btn fab small class=\"button small\" color=\"default\" @click=\"addMedicines\">\n                      <v-icon>add</v-icon>\n                    </v-btn>\n                  </v-flex>\n                </v-layout>\n              </v-layout>\n            </v-layout>\n            <v-layout row wrap class=\"mt-2\">\n              <v-flex md12>\n                <ul class=\"styleUl3\">\n                  <li v-for=\"(medicine,index) in medicines\" :key=\"medicine.medicine_name\">\n                    <v-layout row>\n                      <v-flex md10 style=\"padding-top: 12px;\">\n                        <v-layout column wrap>\n                          <span>{{++index}}.{{medicine.medicine_name}}</span>\n                          <span\n                            class=\"dosages\"\n                          >{{medicine.schedule+\" (\"+medicine.duration+\" days)\"}}</span>\n                        </v-layout>\n                      </v-flex>\n                      <v-flex md2>\n                        <v-btn flat icon @click=\"removeMedicine(medicine)\" color=\"red\">\n                          <v-icon>delete</v-icon>\n                        </v-btn>\n                      </v-flex>\n                    </v-layout>\n                  </li>\n                </ul>\n              </v-flex>\n            </v-layout>\n          </v-layout>\n        </v-flex>\n        <!-- <v-divider class=\"mx-2\" inset vertical></v-divider> -->\n      </v-layout>\n      <!-- <v-layout row class=\"mb-2\">\n        <v-flex xs12 sm6 md4>\n          <v-layout row>\n            <v-flex md12>\n              <ul class=\"styleUl\">\n                <li v-for=\"(symptom,index) in symptoms\" :key=\"symptom\">\n                  <v-layout row>\n                    <v-flex md8>\n                      <span>{{++index}}.{{symptom}}</span>\n                    </v-flex>\n                    <v-flex md4>\n                      <v-btn fab small @click=\"removeSymptom(symptom )\" class=\"red white--text\">\n                        <v-icon>delete</v-icon>\n                      </v-btn>\n                    </v-flex>\n                  </v-layout>\n                </li>\n              </ul>\n            </v-flex>\n          </v-layout>\n        </v-flex>\n        <v-flex xs12 sm6 md4>\n          <v-layout row>\n            <v-flex md12>\n              <ul class=\"styleUl\">\n                <li class=\"text-md-left\" v-for=\"(test,index) in tests\" :key=\"test.test_name\">\n                  <v-layout row>\n                    <v-flex md9>\n                      <span>{{++index}}.{{test.test_name}}</span>\n                    </v-flex>\n                    <v-flex md3>\n                      <v-btn fab small @click=\"removeTest(test )\" class=\"red white--text\">\n                        <v-icon>delete</v-icon>\n                      </v-btn>\n                    </v-flex>\n                  </v-layout>\n                </li>\n              </ul>\n            </v-flex>\n          </v-layout>\n        </v-flex>\n        <v-flex xs12 sm6 md4>\n          <v-layout row>\n            <v-flex md12>\n              <ul class=\"styleUl\">\n                <li v-for=\"(medicine,index) in medicines\" :key=\"medicine.medicine_name\">\n                  <v-layout row>\n                    <v-flex md10>\n                      <v-layout column>\n                        <span>{{++index}}.{{medicine.medicine_name}}</span>\n                        <span class=\"dosages\">{{medicine.schedule+\" (\"+medicine.duration+\" days)\"}}</span>\n                      </v-layout>\n                    </v-flex>\n                    <v-flex md2>\n                      <v-btn fab small @click=\"removeMedicine(medicine)\" class=\"red white--text\">\n                        <v-icon>delete</v-icon>\n                      </v-btn>\n                    </v-flex>\n                  </v-layout>\n                </li>\n              </ul>\n            </v-flex>\n          </v-layout>\n        </v-flex>\n      </v-layout>-->\n      <v-spacer></v-spacer>\n\n      <v-layout class=\"mt-4\" row wrap>\n        <v-flex xs12 sm6 md8>\n          <v-textarea\n            box\n            outline\n            height=\"60px\"\n            label=\"Suggestion\"\n            v-model=\"newSuggestion\"\n            prepend-icon=\"edit\"\n            :rules=\"inputRules\"\n          ></v-textarea>\n        </v-flex>\n        <v-flex xs12 sm6 md4>\n          <v-btn absolute dark right class=\"primary saveButton\" @click=\"save\">Save</v-btn>\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { allSettled } from \"q\";\nexport default {\n  data: () => ({\n    customeDoseDisable: true,\n    newSymptom: \"\",\n    newMedicine: \"\",\n    newTest: \"\",\n    newSuggestion: \"\",\n    inputRules: [v => !!v || \"This field is required\"],\n    information: {\n      name: \"\",\n      age: \"\",\n      contact: \"\"\n    },\n    customeDose: \"\",\n    dosages: \"\",\n    days: \"\",\n    // dosages: {\n    //   morning: 1,\n    //   noon: 1,\n    //   night: 1,\n    //   days: \"\"\n    // }\n    testName: \"\"\n  }),\n\n  created() {\n    this.fetchData();\n    this.$store.dispatch(\"getMedicine\");\n    this.$store.dispatch(\"getTest\");\n    // this.$store.commit(\"prescriptionDate\", this.$route.params.date);\n    this.newSuggestion = this.getSuggestion;\n  },\n  computed: {\n    desserts() {\n      return this.$store.getters.getPrescriptionHead;\n    },\n    symptoms() {\n      return this.$store.state.symptomsPrescription;\n    },\n    tests() {\n      this.newTest = \"\";\n      // console.log(this.$store.getters.getTestName);\n      return this.$store.getters.getTestName;\n    },\n    medicines() {\n      return this.$store.state.medicinesPrescription;\n    },\n    getMedicine() {\n      return this.$store.getters.getMedicines;\n    },\n    getSuggestion() {\n      return this.$store.getters.getSuggestion;\n    },\n    getTest() {\n      // console.log(this.$store.getters.getTests);\n      return this.$store.getters.getTests;\n    },\n    getMedicineSchedule() {\n      console.log(this.$store.getters.getMedicineSchedule);\n      return this.$store.getters.getMedicineSchedule;\n    },\n    prescriptionId() {\n      return this.$store.getters.prescriptionId;\n    }\n  },\n\n  methods: {\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n    toogle() {\n      this.customeDoseDisable = !this.customeDoseDisable;\n    },\n    save() {\n      // var data = {\n      //   schedule_id: this.$store.state.prescriptionScheduleId,\n      //   patient_id: this.$store.state.prescriptionHeadDetails.id\n      // };\n      // this.$store.dispatch(\"setVisited\", data);\n\n      this.$store.commit(\"addSuggestion\", this.newSuggestion);\n      this.$store.dispatch(\"savePrescription\").then(response => {\n        this.$router.push(\"/prescriptions/\" + response.data.data.id);\n      });\n      // this.$store.dispatch(\"setVisited\", data);\n    },\n    getLabel(item) {\n      return item.name;\n    },\n    fetchData() {\n      this.$store.commit(\"resetPrescription\");\n      if (typeof this.$route.params.prescription_id !== \"undefined\") {\n        this.$store.dispatch(\n          \"getDetailsForEditPrescription\",\n          this.$route.params.prescription_id\n        );\n      }\n\n      this.$store.dispatch(\"patientById\", this.$route.params.id);\n      this.$store.commit(\"prescriptionDate\", this.$route.params.date);\n      this.$store.commit(\n        \"prescriptionScheduleId\",\n        this.$route.params.schedule_id\n      );\n      this.$store.dispatch(\"getMedicineSchedule\");\n    },\n    addSymptoms() {\n      this.$store.commit(\"addSymptoms\", this.newSymptom);\n      this.newSymptom = \"\";\n      // this.resetValidation();\n    },\n    removeSymptom(symptom) {\n      const index = this.$store.state.symptomsPrescription.indexOf(symptom);\n      this.$store.state.symptomsPrescription.splice(index, 1);\n    },\n    addMedicines() {\n      if (this.customeDoseDisable) {\n        for (var i = 0; i < this.getMedicine.length; i++) {\n          if (this.getMedicine[i][\"id\"] == this.newMedicine) {\n            for (var j = 0; j < this.getMedicineSchedule.length; j++) {\n              if (this.getMedicineSchedule[j][\"id\"] == this.dosages) {\n                var medicine_dose = this.getMedicineSchedule[j];\n              }\n            }\n            this.$store.commit({\n              type: \"addMedicines\",\n              medicine: this.getMedicine[i],\n              dosages: medicine_dose,\n              days: this.days,\n              customeDoseCheck: true\n            });\n            // this.resetValidation();\n            break;\n          }\n        }\n      } else {\n        console.log(\"store\");\n\n        for (var i = 0; i < this.getMedicine.length; i++) {\n          if (this.getMedicine[i][\"id\"] == this.newMedicine) {\n            console.log(\"store\");\n\n            this.$store.commit({\n              type: \"addMedicines\",\n              medicine: this.getMedicine[i],\n              dosages: this.customeDose,\n              days: this.days,\n              customeDoseCheck: false\n            });\n            // this.resetValidation();\n            break;\n          }\n        }\n      }\n      this.newMedicine = \"\";\n      this.dosages = \"\";\n      this.customeDose = \"\";\n      this.days = \"\";\n    },\n    removeMedicine(medicine) {\n      const index = this.$store.state.medicinesPrescription.indexOf(medicine);\n      this.$store.state.medicinesPrescription.splice(index, 1);\n      // const index = this.medicines.indexOf(medicine);\n      // this.medicines.splice(index, 1);\n    },\n    addTests() {\n      for (var i = 0; i < this.getTest.length; i++) {\n        if (this.getTest[i][\"id\"] == this.newTest) {\n          this.$store.commit(\"addTests\", this.getTest[i]);\n          this.newTest = \"\";\n          console.log(this.$store.getters.getTestName);\n          break;\n        }\n      }\n      // this.resetValidation();\n    },\n    removeTest(test) {\n      const index = this.$store.state.testsPrescription.indexOf(test);\n      this.$store.state.testsPrescription.splice(index, 1);\n      // const index = this.medicines.indexOf(test);\n      // this.tests.splice(index, 1);\n    }\n  }\n};\n</script>\n\n\n<style>\n.styleUl {\n  margin: 0;\n  padding: 0;\n  /* margin-top: 88px; */\n}\n\n.styleUl li {\n  cursor: pointer;\n  position: relative;\n  font-size: 18px;\n  transition: 0.2s;\n}\n\nul.styleUl {\n  list-style-type: none;\n}\n\n/* .styleUl li:hover {\n  background: #0000;\n} */\n\n/* .styleUl li:nth-child(odd) {\n  background: #f9f9f9;\n} */\n\n.styleUl3 {\n  margin: 0;\n  padding: 0;\n}\n\n.styleUl3 li {\n  cursor: pointer;\n  position: relative;\n  font-size: 15px;\n  transition: 0.2s;\n}\n\nul.styleUl3 {\n  list-style-type: none;\n}\n\n.styleUl3 li:hover {\n  background: #0000;\n}\n\n.styleUl3 li:nth-child(odd) {\n  background: #f9f9f9;\n}\n\n.dosages {\n  margin-left: 14px;\n  color: grey;\n}\n\n.saveButton {\n  margin-right: 70px;\n}\n\n.button.small {\n  width: 25px;\n  height: 25px;\n  margin-top: 20px;\n}\n\n.button.medium {\n  width: 35px;\n  height: 35px;\n  /* padding: 6px; */\n}\n\n.prescriptionField {\n  min-height: 270px;\n}\n/* #styled-input {\n  height: 3px;\n  width: 5px;\n  font-size: 5pt;\n}\n.styled-input label[for] {\n  height: 40px;\n  font-size: 20pt;\n} */\n</style>"],"sourceRoot":"src/views/prescriptions"}]}