{"remainingRequest":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js!/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js!/var/www/prescription_frontEnd/node_modules/vuetify-loader/lib/loader.js!/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/prescription_frontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/prescription_frontEnd/src/views/patientsReport/reportByDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/prescription_frontEnd/src/views/patientsReport/reportByDate.vue","mtime":1569850838191},{"path":"/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Format from \"date-fns/format\";\nexport default {\n  data: function data() {\n    return {\n      searchPatient: null,\n      searchPatients: {\n        searchInput: \"\"\n      },\n      searchDate: {\n        date: \"\"\n      }\n    };\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  computed: {\n    headers: function headers() {\n      return this.$store.state.prescriptionHeadByDate;\n    },\n    desserts: function desserts() {\n      return this.$store.getters.getPrescriptionByDate;\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      this.$store.commit(\"resetReportByDate\"); // if (typeof this.$route.params.id != \"undefined\") {\n      //   this.$store.dispatch(\"getPrescriptionReport\", {\n      //     id: this.$route.params.id\n      //   });\n      // }\n    },\n    showTests: function showTests(item) {\n      var twoTests = item.tests.slice(0, 2);\n      var testsInfo = \"\";\n      twoTests.map(function (test) {\n        testsInfo += test.name + \", \";\n      });\n      return testsInfo;\n    },\n    showSymptom: function showSymptom(item) {\n      var twoSymptom = item.prescription_symptom.slice(0, 2);\n      var symptomInfo = \"\";\n      twoSymptom.map(function (symptom) {\n        symptomInfo += symptom.symptoms + \", \";\n      });\n      return symptomInfo;\n    },\n    showMedicine: function showMedicine(item) {\n      var twoMedicines = item.medicines.slice(0, 2);\n      var medicineInfo = \"\";\n      twoMedicines.map(function (medicine) {\n        medicineInfo += medicine.name + \", \";\n      });\n      return medicineInfo;\n    },\n    showPrescription: function showPrescription(item) {\n      this.$router.push(\"/prescriptions/\" + item.id);\n    },\n    viewDateFormate: function viewDateFormate(date) {\n      return date ? Format(date, \"YYYY MMM Do\") : \"\";\n    },\n    retrievePrescriptionbyDate: function retrievePrescriptionbyDate() {\n      this.$store.dispatch(\"retrievePrescriptionbyDate\", this.searchDate);\n    }\n  }\n};",{"version":3,"sources":["reportByDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,OAAA,MAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,cAAA,EAAA;AACA,QAAA,WAAA,EAAA;AADA,OAFA;AAKA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA;AALA,KAAA;AAAA,GADA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,SAAA;AACA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,sBAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA;AACA;AANA,GAbA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EADA,CAEA;AACA;AACA;AACA;AACA;AACA,KARA;AASA,IAAA,SATA,qBASA,IATA,EASA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAEA,UAAA,SAAA,GAAA,EAAA;AAEA,MAAA,QAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,SAAA,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,OAFA;AAIA,aAAA,SAAA;AACA,KAnBA;AAoBA,IAAA,WApBA,uBAoBA,IApBA,EAoBA;AACA,UAAA,UAAA,GAAA,IAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAEA,UAAA,WAAA,GAAA,EAAA;AAEA,MAAA,UAAA,CAAA,GAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,WAAA,IAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,OAFA;AAIA,aAAA,WAAA;AACA,KA9BA;AA+BA,IAAA,YA/BA,wBA+BA,IA/BA,EA+BA;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAEA,UAAA,YAAA,GAAA,EAAA;AAEA,MAAA,YAAA,CAAA,GAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,YAAA,IAAA,QAAA,CAAA,IAAA,GAAA,IAAA;AACA,OAFA;AAIA,aAAA,YAAA;AACA,KAzCA;AA0CA,IAAA,gBA1CA,4BA0CA,IA1CA,EA0CA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,oBAAA,IAAA,CAAA,EAAA;AACA,KA5CA;AA6CA,IAAA,eA7CA,2BA6CA,IA7CA,EA6CA;AACA,aAAA,IAAA,GAAA,MAAA,CAAA,IAAA,EAAA,aAAA,CAAA,GAAA,EAAA;AACA,KA/CA;AAgDA,IAAA,0BAhDA,wCAgDA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,KAAA,UAAA;AACA;AAlDA;AAtBA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-layout>\n      <v-flex>\n        <h2 class=\"grey--text\">Prescription List</h2>\n      </v-flex>\n      <v-flex></v-flex>\n    </v-layout>\n    <v-spacer></v-spacer>\n    <v-layout>\n      <v-flex md-4></v-flex>\n      <v-flex md-4>\n        <v-menu>\n          <v-text-field\n            :value=\"viewDateFormate(searchDate.date)\"\n            slot=\"activator\"\n            label=\"Filter by date\"\n            prepend-icon=\"date_range\"\n          ></v-text-field>\n          <v-date-picker v-model=\"searchDate.date\" @input=\"retrievePrescriptionbyDate\"></v-date-picker>\n        </v-menu>\n      </v-flex>\n      <v-flex md4></v-flex>\n    </v-layout>\n    <v-spacer></v-spacer>\n    <v-data-table :headers=\"headers\" :items=\"desserts\" class=\"elevation-1 ma-4\">\n      <template v-slot:items=\"props\">\n        <td class=\"text--xs\">{{ props.item.patient.name }}</td>\n        <td class=\"text--xs\">{{ props.item.patient.contact }}</td>\n        <td class=\"text--xs\">{{ props.item.created_at }}</td>\n        <td class=\"text--xs\">{{ showSymptom(props.item) }}</td>\n        <td class=\"text--xs\">{{ showMedicine(props.item) }}</td>\n        <td class=\"text--xs\">{{ showTests(props.item) }}</td>\n        <td class=\"text--xs\">\n          <v-tooltip top>\n            <v-btn\n              small\n              fab\n              dark\n              color=\"indigo\"\n              slot=\"activator\"\n              @click=\"showPrescription(props.item)\"\n            >\n              <v-icon>remove_red_eye</v-icon>\n            </v-btn>\n            <span>Show Prescription</span>\n          </v-tooltip>\n        </td>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n<script>\nimport Format from \"date-fns/format\";\n\nexport default {\n  data: () => ({\n    searchPatient: null,\n    searchPatients: {\n      searchInput: \"\"\n    },\n    searchDate: {\n      date: \"\"\n    }\n  }),\n  created() {\n    this.fetchData();\n  },\n  computed: {\n    headers() {\n      return this.$store.state.prescriptionHeadByDate;\n    },\n    desserts() {\n      return this.$store.getters.getPrescriptionByDate;\n    }\n  },\n\n  methods: {\n    fetchData() {\n      this.$store.commit(\"resetReportByDate\");\n      // if (typeof this.$route.params.id != \"undefined\") {\n      //   this.$store.dispatch(\"getPrescriptionReport\", {\n      //     id: this.$route.params.id\n      //   });\n      // }\n    },\n    showTests(item) {\n      var twoTests = item.tests.slice(0, 2);\n\n      var testsInfo = \"\";\n\n      twoTests.map(test => {\n        testsInfo += test.name + \", \";\n      });\n\n      return testsInfo;\n    },\n    showSymptom(item) {\n      var twoSymptom = item.prescription_symptom.slice(0, 2);\n\n      var symptomInfo = \"\";\n\n      twoSymptom.map(symptom => {\n        symptomInfo += symptom.symptoms + \", \";\n      });\n\n      return symptomInfo;\n    },\n    showMedicine(item) {\n      var twoMedicines = item.medicines.slice(0, 2);\n\n      var medicineInfo = \"\";\n\n      twoMedicines.map(medicine => {\n        medicineInfo += medicine.name + \", \";\n      });\n\n      return medicineInfo;\n    },\n    showPrescription(item) {\n      this.$router.push(\"/prescriptions/\" + item.id);\n    },\n    viewDateFormate(date) {\n      return date ? Format(date, \"YYYY MMM Do\") : \"\";\n    },\n    retrievePrescriptionbyDate() {\n      this.$store.dispatch(\"retrievePrescriptionbyDate\", this.searchDate);\n    }\n  }\n};\n</script>\n\n<style lang=\"\">\n</style>"],"sourceRoot":"src/views/patientsReport"}]}