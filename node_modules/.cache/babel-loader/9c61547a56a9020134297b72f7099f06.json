{"remainingRequest":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js!/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js!/var/www/prescription_frontEnd/node_modules/eslint-loader/index.js??ref--13-0!/var/www/prescription_frontEnd/src/router/router.js","dependencies":[{"path":"/var/www/prescription_frontEnd/src/router/router.js","mtime":1570443493944},{"path":"/var/www/prescription_frontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/prescription_frontEnd/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Dashboard from '../views/Dashboard.vue';\nimport Members from '../views/members.vue';\nimport PatientList from '../views/patients/patientsList.vue';\nimport DoctorList from '../views/doctors/doctorsList.vue';\nimport MedicineList from '../views/medicines/medicinesList.vue';\nimport TestList from '../views/tests/testsList.vue';\nimport Prescription from '../views/prescriptions/prescription.vue';\nimport PrintPrescription from '../views/prescriptions/print.vue';\nimport AuthHandler from '../views/auth/authHandler';\nimport Signin from '../views/auth/signin';\nimport Signup from '../views/auth/signup';\nimport Signout from '../views/auth/signout';\nimport Report from '../views/patientsReport/report';\nimport ReportByDate from '../views/patientsReport/reportByDate';\nimport Settings from '../views/settings/timeSlotSettings';\nimport HeaderSettings from '../views/settings/prescriptionHeaderSettings';\nimport Profile from '../views/profile/profile';\nimport { store } from '../store/store';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/profile/profile',\n    name: 'profile',\n    component: Profile,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/members',\n    name: 'members',\n    component: Members,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/patients/patientsList',\n    name: 'patientList',\n    component: PatientList,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/doctors/doctorsList',\n    name: 'doctorList',\n    component: DoctorList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type) {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/medicines/medicinesList',\n    name: 'medicineList',\n    component: MedicineList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/tests/testsList',\n    name: 'testList',\n    component: TestList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/prescriptions/patient/:id/:schedule_id/:date?/:prescription_id?',\n    name: 'prescription',\n    component: Prescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/prescriptions/:id',\n    name: 'printPrescription1',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/prescriptions/print',\n    name: 'printPrescription',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/oauth2/callback',\n    name: 'auth handler',\n    component: AuthHandler,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/signin',\n    name: 'signin',\n    component: Signin,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/signout',\n    name: 'signout',\n    component: Signout,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/patientsReport/report/:id?',\n    name: 'report',\n    component: Report,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/patientsReport/reportByDate/:id?',\n    name: 'reportByDate',\n    component: ReportByDate,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/settings/settings/time-slot',\n    name: 'settings',\n    component: Settings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/settings/settings/header',\n    name: 'headerSettings',\n    component: HeaderSettings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }]\n});\nexport default router;",{"version":3,"sources":["/var/www/prescription_frontEnd/src/router/router.js"],"names":["Vue","Router","Dashboard","Members","PatientList","DoctorList","MedicineList","TestList","Prescription","PrintPrescription","AuthHandler","Signin","Signup","Signout","Report","ReportByDate","Settings","HeaderSettings","Profile","store","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEnter","to","from","next","state","userInfo","user_type","requiresVisitor"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Dashboard from '../views/Dashboard.vue'\nimport Members from '../views/members.vue'\nimport PatientList from '../views/patients/patientsList.vue'\nimport DoctorList from '../views/doctors/doctorsList.vue'\nimport MedicineList from '../views/medicines/medicinesList.vue'\nimport TestList from '../views/tests/testsList.vue'\nimport Prescription from '../views/prescriptions/prescription.vue'\nimport PrintPrescription from '../views/prescriptions/print.vue'\nimport AuthHandler from '../views/auth/authHandler'\nimport Signin from '../views/auth/signin'\nimport Signup from '../views/auth/signup'\nimport Signout from '../views/auth/signout'\nimport Report from '../views/patientsReport/report'\nimport ReportByDate from '../views/patientsReport/reportByDate'\nimport Settings from '../views/settings/timeSlotSettings'\nimport HeaderSettings from '../views/settings/prescriptionHeaderSettings'\nimport Profile from '../views/profile/profile'\nimport {\n  store\n} from '../store/store'\n\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    },\n\n  },\n  {\n    path: '/profile/profile',\n    name: 'profile',\n    component: Profile,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/members',\n    name: 'members',\n    component: Members,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/patients/patientsList',\n    name: 'patientList',\n    component: PatientList,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/doctors/doctorsList',\n    name: 'doctorList',\n    component: DoctorList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type) {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/medicines/medicinesList',\n    name: 'medicineList',\n    component: MedicineList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/tests/testsList',\n    name: 'testList',\n    component: TestList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/prescriptions/patient/:id/:schedule_id/:date?/:prescription_id?',\n    name: 'prescription',\n    component: Prescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/prescriptions/:id',\n    name: 'printPrescription1',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/prescriptions/print',\n    name: 'printPrescription',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/oauth2/callback',\n    name: 'auth handler',\n    component: AuthHandler,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/signin',\n    name: 'signin',\n    component: Signin,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/signout',\n    name: 'signout',\n    component: Signout,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/patientsReport/report/:id?',\n    name: 'report',\n    component: Report,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/patientsReport/reportByDate/:id?',\n    name: 'reportByDate',\n    component: ReportByDate,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/settings/settings/time-slot',\n    name: 'settings',\n    component: Settings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/settings/settings/header',\n    name: 'headerSettings',\n    component: HeaderSettings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n\n  ]\n})\n\n\nexport default router;"]}]}