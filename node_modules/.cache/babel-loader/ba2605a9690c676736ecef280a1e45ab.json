{"remainingRequest":"/var/www/minibank/node_modules/babel-loader/lib/index.js!/var/www/minibank/node_modules/eslint-loader/index.js??ref--13-0!/var/www/minibank/src/router/router.js","dependencies":[{"path":"/var/www/minibank/src/router/router.js","mtime":1572958262981},{"path":"/var/www/minibank/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/minibank/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Dashboard from '../views/Dashboard.vue';\nimport Members from '../views/members.vue';\nimport PatientList from '../views/patients/patientsList.vue';\nimport DoctorList from '../views/doctors/doctorsList.vue';\nimport MedicineList from '../views/medicines/medicinesList.vue';\nimport TestList from '../views/tests/testsList.vue';\nimport Prescription from '../views/prescriptions/prescription.vue';\nimport PrintPrescription from '../views/prescriptions/print.vue';\nimport AuthHandler from '../views/auth/authHandler';\nimport Signin from '../views/auth/signin';\nimport Signup from '../views/auth/signup';\nimport PasswordReset from '../views/auth/passwordReset';\nimport SendPasswordResetRequest from '../views/auth/sendPasswordResetRequest';\nimport Signout from '../views/auth/signout';\nimport Report from '../views/patientsReport/report';\nimport ReportByDate from '../views/patientsReport/reportByDate';\nimport Settings from '../views/settings/timeSlotSettings';\nimport HeaderSettings from '../views/settings/prescriptionHeaderSettings';\nimport Profile from '../views/profile/profile';\nimport AccountBalance from '../views/customersPages/accountBalance';\nimport FundTransfer from '../views/customersPages/fundTransfer';\nimport AccountInfo from '../views/customersPages/accountInfo';\nimport Deposite from '../views/customersPages/deposite';\nimport AccountStatement from '../views/customersPages/accountStatement';\nimport NewAccount from '../views/customersPages/newAccount';\nimport { store } from '../store/store';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/deposite',\n    name: 'deposite',\n    component: Deposite,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/accountBalance',\n    name: 'accountBalance',\n    component: AccountBalance,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/fundTransfer',\n    name: 'fundTransfer',\n    component: FundTransfer,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/accountInfo',\n    name: 'accountInfo',\n    component: AccountInfo,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/accountStatement',\n    name: 'accountStatement',\n    component: AccountStatement,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/customersPages/newAccount',\n    name: 'newAccount',\n    component: NewAccount,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/profile/profile',\n    name: 'profile',\n    component: Profile,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/members',\n    name: 'members',\n    component: Members // meta: {\n    //   requiresAuth: true\n    // },\n    // beforeEnter: (to, from, next) => {\n    //   if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n    //     next();\n    //   } else {\n    //     next(\"/\")\n    //   }\n    // }\n\n  }, {\n    path: '/patients/patientsList',\n    name: 'patientList',\n    component: PatientList,\n    meta: {}\n  }, {\n    path: '/doctors/doctorsList',\n    name: 'doctorList',\n    component: DoctorList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type) {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/medicines/medicinesList',\n    name: 'medicineList',\n    component: MedicineList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/tests/testsList',\n    name: 'testList',\n    component: TestList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/prescriptions/patient/:id/:schedule_id/:date?/:prescription_id?',\n    name: 'prescription',\n    component: Prescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/prescriptions/:id',\n    name: 'printPrescription1',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/prescriptions/print',\n    name: 'printPrescription',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/oauth2/callback',\n    name: 'auth handler',\n    component: AuthHandler,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/signin',\n    name: 'signin',\n    component: Signin,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/passwordReset/:token',\n    name: 'passwordReset',\n    component: PasswordReset,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/sendPasswordResetRequest',\n    name: 'sendPasswordResetRequest',\n    component: SendPasswordResetRequest,\n    meta: {\n      requiresVisitor: true\n    }\n  }, {\n    path: '/signout',\n    name: 'signout',\n    component: Signout,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/patientsReport/report/:id?',\n    name: 'report',\n    component: Report,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/patientsReport/reportByDate/:id?',\n    name: 'reportByDate',\n    component: ReportByDate,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/settings/settings/time-slot',\n    name: 'settings',\n    component: Settings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }, {\n    path: '/settings/settings/header',\n    name: 'headerSettings',\n    component: HeaderSettings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: function beforeEnter(to, from, next) {\n      if (store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\");\n      }\n    }\n  }]\n});\nexport default router;",{"version":3,"sources":["/var/www/minibank/src/router/router.js"],"names":["Vue","Router","Dashboard","Members","PatientList","DoctorList","MedicineList","TestList","Prescription","PrintPrescription","AuthHandler","Signin","Signup","PasswordReset","SendPasswordResetRequest","Signout","Report","ReportByDate","Settings","HeaderSettings","Profile","AccountBalance","FundTransfer","AccountInfo","Deposite","AccountStatement","NewAccount","store","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","beforeEnter","to","from","next","state","userInfo","user_type","requiresVisitor"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Dashboard from '../views/Dashboard.vue'\nimport Members from '../views/members.vue'\nimport PatientList from '../views/patients/patientsList.vue'\nimport DoctorList from '../views/doctors/doctorsList.vue'\nimport MedicineList from '../views/medicines/medicinesList.vue'\nimport TestList from '../views/tests/testsList.vue'\nimport Prescription from '../views/prescriptions/prescription.vue'\nimport PrintPrescription from '../views/prescriptions/print.vue'\nimport AuthHandler from '../views/auth/authHandler'\nimport Signin from '../views/auth/signin'\nimport Signup from '../views/auth/signup'\nimport PasswordReset from '../views/auth/passwordReset'\nimport SendPasswordResetRequest from '../views/auth/sendPasswordResetRequest'\nimport Signout from '../views/auth/signout'\nimport Report from '../views/patientsReport/report'\nimport ReportByDate from '../views/patientsReport/reportByDate'\nimport Settings from '../views/settings/timeSlotSettings'\nimport HeaderSettings from '../views/settings/prescriptionHeaderSettings'\nimport Profile from '../views/profile/profile'\nimport AccountBalance from '../views/customersPages/accountBalance'\nimport FundTransfer from '../views/customersPages/fundTransfer'\nimport AccountInfo from '../views/customersPages/accountInfo'\nimport Deposite from '../views/customersPages/deposite'\nimport AccountStatement from '../views/customersPages/accountStatement'\nimport NewAccount from '../views/customersPages/newAccount'\nimport {\n  store\n} from '../store/store'\n\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'dashboard',\n    component: Dashboard,\n    meta: {\n      requiresAuth: true\n    }\n\n  },\n  {\n    path: '/customersPages/deposite',\n    name: 'deposite',\n    component: Deposite,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/customersPages/accountBalance',\n    name: 'accountBalance',\n    component: AccountBalance,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/customersPages/fundTransfer',\n    name: 'fundTransfer',\n    component: FundTransfer,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/customersPages/accountInfo',\n    name: 'accountInfo',\n    component: AccountInfo,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/customersPages/accountStatement',\n    name: 'accountStatement',\n    component: AccountStatement,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/customersPages/newAccount',\n    name: 'newAccount',\n    component: NewAccount,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/profile/profile',\n    name: 'profile',\n    component: Profile,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/members',\n    name: 'members',\n    component: Members,\n    // meta: {\n    //   requiresAuth: true\n    // },\n    // beforeEnter: (to, from, next) => {\n    //   if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n    //     next();\n    //   } else {\n    //     next(\"/\")\n    //   }\n    // }\n  },\n  {\n    path: '/patients/patientsList',\n    name: 'patientList',\n    component: PatientList,\n    meta: {\n    }\n  },\n  {\n    path: '/doctors/doctorsList',\n    name: 'doctorList',\n    component: DoctorList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type) {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/medicines/medicinesList',\n    name: 'medicineList',\n    component: MedicineList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/tests/testsList',\n    name: 'testList',\n    component: TestList,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/prescriptions/patient/:id/:schedule_id/:date?/:prescription_id?',\n    name: 'prescription',\n    component: Prescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/prescriptions/:id',\n    name: 'printPrescription1',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/prescriptions/print',\n    name: 'printPrescription',\n    component: PrintPrescription,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/oauth2/callback',\n    name: 'auth handler',\n    component: AuthHandler,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/signin',\n    name: 'signin',\n    component: Signin,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/passwordReset/:token',\n    name: 'passwordReset',\n    component: PasswordReset,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/sendPasswordResetRequest',\n    name: 'sendPasswordResetRequest',\n    component: SendPasswordResetRequest,\n    meta: {\n      requiresVisitor: true\n    }\n  },\n  {\n    path: '/signout',\n    name: 'signout',\n    component: Signout,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/patientsReport/report/:id?',\n    name: 'report',\n    component: Report,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/patientsReport/reportByDate/:id?',\n    name: 'reportByDate',\n    component: ReportByDate,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/settings/settings/time-slot',\n    name: 'settings',\n    component: Settings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'hospital' || store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n  {\n    path: '/settings/settings/header',\n    name: 'headerSettings',\n    component: HeaderSettings,\n    meta: {\n      requiresAuth: true\n    },\n    beforeEnter: (to, from, next) => {\n      if (store.state.userInfo.user_type == 'doctor') {\n        next();\n      } else {\n        next(\"/\")\n      }\n    }\n  },\n\n  ]\n})\n\n\nexport default router;"]}]}